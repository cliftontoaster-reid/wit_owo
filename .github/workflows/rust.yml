name: Rust Continuous Testing Integration
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: write # allow commits+pushing
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          override-components: clippy

      - name: Install dependencies
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
  formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true # so git push is allowed
          fetch-depth: 0 # full history for safe rebasing, etc.

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          override-components: rustfmt, clippy

      - name: Install dependencies
        run: cargo install cargo-msrv

      - name: Find and set MSRV
        run: |
          set -o pipefail
          # run find, grab the version after ‚ÄúMSRV:‚Äù
          MSRV=$(cargo msrv find --include-all-patch-releases 2>&1 | awk '/MSRV:/ {print $2}')
          echo "üïµÔ∏è Detected MSRV: $MSRV"
          # now set it
          cargo msrv set "$MSRV"
      - name: Format code
        run: cargo fmt --all -- --check

      - name: Commit and push MSRV update
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --cached --quiet || git commit -m "chore: update MSRV to $MSRV"
          git push
